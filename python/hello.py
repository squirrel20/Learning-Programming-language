#!/usr/bin/env python3
# 第一行这个可以让py文件被执行
# 以#开头到语句是注释

#-------------------------------------------------------------------------------
# print 输出函数
#-------------------------------------------------------------------------------

print('hello, world')
# print会依次打印每个字符串，遇到逗号会输出一个空格
print('string a', 'string b', 'string c')

print(1+2+3)

print('1 + 1 =', 1 + 1)

#-------------------------------------------------------------------------------
# intput 输入函数
#-------------------------------------------------------------------------------

name = input()
print('hello', name)

tips = input('please enter your name: ')
print('hello', tips)

#-------------------------------------------------------------------------------
# 数据类型
#-------------------------------------------------------------------------------

# 整数 python可以处理任意大小的整数
a = 1
b = -2
c = 0xff2

# 浮点数
d = 1.23
e = -2.10
f = 1.23e9  # 1.23x10^9
g = 1.2e-5

# 字符串
h = 'hi'
i = "yoyo"
print('hi\tyo\n')
j = '''line1
...line2
...line3'''

# 布尔值
k = True
l = False
m = 3 > 2
n = True and True # and, or, not

# 空值
o = None # None不能理解为0，因为0是有意义的，而None是一个特殊的空值

#-------------------------------------------------------------------------------
# 变量
#-------------------------------------------------------------------------------

a = 'abc'   # a指向'abc'
b = a       # b和a一样也指向'abc'
a = 'xyz'   # a指向'xyz'，b依然指向'abc'
a = 1       # 动态语言，变量类型不固定
PI = 3.1415 # 通常用全部大写的变量表示常量，其实仍然可以改变PI的值
p = 10 / 3  # 3.3333
p = 9 / 3   # 3.0
q = 10 // 3 # 3
r = 10 % 3  # 1

#-------------------------------------------------------------------------------
# 字符串
#-------------------------------------------------------------------------------

# ASCII编码     1字节
# Unicode编码   2字节
# UTF-8编码     1-6字节，主要用于存储和传输
# python3使用Unicode编码

print('包含中文的str')
ord('A')    # 获取字符的整数表示
chr(66)     # 把编码转换为对应的字符

'\u4e2d\u6587' # 中文

a = 'abc'   # str字符串类型，在内存中以Unicode表示
b = b'abc'  # 以字节为单位，用于网络传输、保存到磁盘

'abc'.encode('ascii')   # 编码为ascii b'abc'
'中文'.encode('utf-8')  # 编码为utf-8 b'\xe4\xb8\xad\xe6\x96\x87'

b'abc'.decode('ascii')      # 将字节流当作ascii编码的，解码为unicode编码
b'\xe4\xb8\xad\xe6\x96\x87' # 将字节流当作utf-8编码的，解码为unicode编码

len('中文') # 计算字符数
len(b'abc') # 计算字节数
